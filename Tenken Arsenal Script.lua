-- good luck skiddy LOL

do local _old_print, _old_warn = print, (warn or function() end); print = function() end; if warn then warn = function() end end; pcall(function() if type(os)=="table" and type(os.getenv)=="function" then local _old_getenv=os.getenv; os.getenv=function() return nil end end end) end
do pcall(function() if debug then debug.getinfo=nil;debug.getupvalue=nil;debug.setupvalue=nil;debug.setlocal=nil;debug.getlocal=nil;debug.getregistry=nil;debug.debug=nil end end);pcall(function() if getfenv then local e=getfenv(0);for k,v in pairs(e)do if type(v)=="function"and(k=="loadstring"or k=="load")then e[k]=function()return nil end end end end end) end
return(function(...)local en={"\098\084\050\113\048\082\051\066";"\098\070\101\055\048\119\061\061";"\119\070\106\074\117\085\047\057";"\119\076\101\074\117\084\072\056\102\065\072\121\104\085\053\099";"\098\085\104\109\048\100\071\080\048\076\048\057\048\065\119\061","\053\084\053\049\112\115\081\083\102\076\053\074";"\119\076\050\073\054\070\112\113\117\085\053\118\048\050\104\113\102\082\051\057\108\084\050\113\048\082\051\073\068\119\061\061","\053\084\053\049\112\050\071\073\102\082\081\101\048\122\061\061","\104\076\106\118\112\122\061\061";"\098\070\106\109\108\076\071\101\098\070\050\118\108\066\072\056\117\084\119\061";"\053\084\053\049\112\115\071\056\117\084\106\113\043\097\061\061","\053\084\053\049\112\050\071\066\108\076\106\110\048\053\104\113\102\082\051\057\108\084\050\113\048\082\051\073\068\119\061\061";"\053\084\053\049\112\050\071\066\108\076\106\110\048\098\071\056\117\084\106\113\043\097\061\061";"\053\084\053\049\112\050\083\088\117\084\101\077\117\076\109\101\117\077\119\061";"\119\070\053\118\112\084\053\113","\053\084\053\049\112\050\101\088\117\084\101\077\117\076\109\101\117\077\119\061","\052\084\101\118\048\119\061\061";"\119\070\106\074\117\085\047\061";"\053\084\083\099\102\070\111\118\048\065\071\057";"\053\076\101\057\054\082\072\074\048\119\061\061","\053\076\101\101\112\085\088\056\108\077\104\052\054\065\099\101";"\098\084\106\057\054\065\104\099\117\070\049\061","\104\077\072\056\117\119\061\061";"\082\122\061\061";"\082\119\061\061";"\053\084\103\061","\104\053\071\119\047\115\106\097\112\084\101\056\117\077\043\061";"\052\085\088\066\054\082\106\118\108\097\061\061","\104\053\071\119\047\050\104\101\102\082\109\057";"\104\053\071\119\047\050\088\074\102\065\101\101\108\077\043\061","\104\053\071\119\047\050\072\100\119\069\088\116\117\085\079\061","\104\053\071\119\047\050\104\113\102\082\071\101\108\077\043\061";"\119\085\053\113\108\076\053\118\112\115\106\097\112\084\101\056\117\079\061\061","\052\065\053\074\112\084\101\097\117\084\053\080\108\100\104\099\117\070\051\057";"\104\076\081\083\048\097\061\061";"\104\053\071\119\065\066\104\113\117\085\088\121\117\085\112\118","\112\084\050\069\117\084\098\061","\108\085\104\113\054\082\051\077";"\098\076\053\118\048\084\053\113\098\085\104\101\108\100\088\101\048\122\061\061","\098\084\081\083\068\082\053\113\119\082\104\121\048\082\119\061","\119\070\083\083\108\076\050\073\112\084\053\113\119\082\104\121\048\082\119\061";"\098\084\081\083\068\082\053\113\098\076\053\111\117\085\048\099\117\076\108\061","\112\070\050\099\112\122\061\061","\108\085\088\083\112\070\049\061","\119\082\101\111\119\076\106\066","\119\070\101\113\102\070\081\101","\098\076\050\121\054\065\053\057";"\104\076\101\074\117\084\053\121";"\052\077\053\111\098\070\101\121\048\065\043\061","\052\109\122\079\119\082\101\111\102\076\106\066";"\119\082\101\111\102\076\106\066";"\119\082\101\111\102\076\106\066\047\122\061\061","\104\084\101\057\102\082\072\074\048\082\119\061";"\104\121\106\082\047\050\071\099\068\076\098\061";"\098\076\050\118\048\070\098\061";"\105\082\051\073\108\076\053\111\048\082\051\066","\098\085\053\076\048\076\101\049";"\108\100\079\061","\119\085\053\113\108\076\053\118\112\050\048\083\117\100\053\101";"\104\121\106\082\065\109\071\074\054\082\104\101\108\079\061\061";"\098\070\053\118\108\070\101\066\054\065\048\099\112\100\121\061";"\108\097\061\061","\098\070\053\118\108\070\101\066\054\065\048\099\112\100\101\087\098\070\081\099\048\084\053\113";"\105\100\053\111\102\082\051\056\054\082\119\061";"\105\084\053\083\117\100\104\114";"\052\082\050\077\117\076\101\066\112\082\104\101","\105\082\051\097\112\065\104\116\048\082\112\083\117\079\061\061";"\053\065\071\101\108\121\101\118\108\100\053\066\053\100\101\097\048\119\061\061","\052\082\106\109\108\070\053\116\112\065\104\066\117\070\049\113","\105\082\051\097\112\065\104\050\117\076\104\101\048\122\061\061","\104\082\050\057\054\082\051\077\098\085\104\051\117\084\098\061";"\098\070\101\118\048\119\061\061";"\104\082\050\057\054\082\051\077\104\084\101\113\048\082\071\066\054\082\106\118";"\052\085\053\066";"\119\066\048\113\102\082\109\101","\052\082\106\070\048\082\109\101\117\077\119\061";"\053\070\050\074\054\109\071\097\048\082\053\121";"\047\050\071\097\048\082\053\121","\119\082\104\070\102\082\051\073\048\082\104\065\102\082\081\110\098\085\088\101\048\082\104\052\117\084\101\121\048\065\047\061";"\105\084\053\083\108\077\104\069\048\082\050\066","\052\082\106\070\048\098\104\099\108\076\053\073\112\084\101\056\117\079\061\061";"\053\082\051\099\112\122\061\061","\053\076\053\074\117\070\071\099\112\100\121\061","\082\079\061\061","\105\082\051\076\054\082\051\099\112\084\098\079\105\077\053\111\108\122\061\061","\105\082\051\076\105\077\053\111\108\050\104\056\048\070\112\074\048\119\061\061";"\105\077\053\111\108\050\088\056\112\070\053\113";"\105\077\053\111\108\050\072\101\108\065\053\101\108\085\119\061";"\105\100\053\111\102\082\051\056\054\082\104\052\112\084\050\066\048\053\104\051\108\084\098\061","\105\077\053\111\108\084\101\118\048\097\061\061";"\052\082\101\057\102\097\061\061";"\053\076\101\057\112\082\050\074\108\097\061\061";"\052\084\101\077\054\100\104\099\117\076\108\061";"\119\077\072\099\048\070\083\066\117\076\053\057\108\097\061\061";"\119\082\109\069\054\082\053\118\112\122\061\061";"\052\085\053\066\048\084\106\056\108\121\050\111\102\076\101\101\117\077\119\061";"\104\077\053\074\117\116\088\116\108\076\101\077\054\100\104\118\048\065\071\057";"\104\077\053\074\117\115\072\113\054\082\112\114\112\050\104\056\048\070\112\074\048\119\061\061";"\119\076\050\057\048\053\088\083\108\077\119\061","\082\116\109\105\102\065\121\061","\082\100\072\083\068\053\104\056\048\070\112\074\048\119\061\061";"\098\085\104\101\108\100\088\101\048\122\061\061";"\119\070\050\118\119\070\106\074\117\084\101\121\048\119\061\061";"\052\076\106\067\117\084\101\097";"\052\076\106\073\117\084\101\097\053\084\106\077\048\070\081\101";"\098\070\053\066\112\084\101\118\048\085\043\061","\119\082\109\069\048\065\047\079\104\070\081\056\112\097\061\061","\119\082\109\069\048\065\072\100\117\084\106\085";"\119\082\109\101\112\084\083\051\108\085\119\061","\119\076\081\056\117\070\066\061";"\104\084\050\113\054\113\088\116\117\100\053\101";"\104\084\050\113\054\066\072\074\112\082\098\061";"\104\085\072\101\048\082\049\061","\052\084\101\077\054\100\119\061";"\052\070\071\101\102\082\049\061","\098\070\053\113\048\082\051\099\112\100\121\061","\119\070\083\083\117\076\112\101\047\050\104\114\048\082\109\101";"\053\084\083\101\117\082\053\052\048\082\081\101\102\085\104\099\117\070\049\061","\098\070\053\074\048\082\071\066\048\082\119\079\117\085\088\066\054\082\106\118\090\079\061\061","\119\065\088\097\117\100\101\099\117\076\108\079\112\084\083\101\117\082\098\055";"\052\082\106\121\054\082\048\051\053\084\083\101\117\082\098\061";"\048\077\053\118\102\085\104\099\117\070\049\061","\052\082\106\121\054\082\048\051\053\084\083\101\117\082\098\079\048\077\053\118\102\085\104\099\117\070\049\079\117\076\106\066\047\084\048\056\112\082\051\121\047\084\101\118\047\050\112\099\117\076\104\056\112\097\061\061";"\119\085\072\101\048\084\101\066\108\097\061\061";"\104\084\101\057\102\070\106\113\048\067\114\079\065\113\051\057\054\084\106\056\112\067\072\110\054\082\081\074";"\082\082\106\109\053\100\053\069\048\052\114\079\117\070\048\076\054\082\071\099\102\082\081\087\112\084\053\118\054\070\053\118","\098\070\071\113\054\065\088\066\102\076\081\056\068\067\114\079\052\070\048\076\054\082\071\099\102\082\081\098\048\082\051\110\048\082\051\088\117\100\119\061";"\119\070\106\097\068\105\088\115\054\065\071\073\117\085\072\121\047\050\071\101\108\077\048\101\108\069\088\043\054\082\051\110","\054\100\104\066\108\100\043\055\120\113\106\121\054\065\071\073\117\085\072\121\120\076\112\077\120\109\115\109\105\101\048\066\048\085\072\113\108\053\079\061","\104\070\053\066\098\070\053\113\112\076\101\073\048\119\061\061";"\098\085\104\083\108\077\104\101\108\121\112\109\054\119\061\061";"\098\070\053\118\048\115\051\056\112\084\101\076\054\082\071\083\112\084\101\056\117\079\061\061";"\053\084\101\066\117\084\098\061";"\105\082\051\076\117\097\061\061","\053\084\053\049\112\122\061\061","\053\084\083\083\117\076\074\079\068\082\106\109\047\084\048\056\108\069\088\109\108\070\101\118\048\113\088\056\112\065\047\079\108\070\071\113\054\065\088\066\047\105\088\086\117\070\101\118\047\084\106\109\108\069\088\121\054\065\071\073\117\085\072\121\047\100\071\101\108\077\048\101\108\069\088\076\117\085\047\079\117\082\106\113\048\105\088\057\102\085\072\099\108\100\104\057\047\084\050\118\048\116\088\109\108\084\104\083\112\084\053\057\047\116\083\121\054\065\071\073\117\085\072\121\120\076\112\077\120\109\115\109\105\101\048\066\048\085\072\113\108\053\079\099";"\104\100\053\113\102\065\104\099\117\070\049\061","\098\084\081\083\102\070\053\072\048\122\061\061";"\098\084\081\083\068\082\053\113\108\097\061\061","\052\084\106\073\102\082\081\119\117\084\050\051\048\065\047\061","\053\084\083\099\108\113\088\057\102\085\072\099\108\100\119\079\117\070\051\074\068\105\088\085\117\085\072\110\108\113\088\099\117\069\088\088\108\077\071\101\117\076\050\074\047\119\061\061";"\119\085\053\113\108\076\053\118\112\115\071\083\117\082\053\113\102\119\061\061","\098\077\053\118\098\070\053\113\112\076\101\073\048\119\061\061","\053\065\071\101\108\121\101\118\108\100\053\066\098\070\053\113\112\076\101\073\048\119\061\061";"\053\100\112\101\048\082\051\052\048\065\072\070\054\082\071\101";"\119\077\053\118\117\076\121\061","\104\084\053\074\112\084\115\061","\105\085\072\118\117\122\061\061";"\082\084\053\118\117\097\061\061","\082\076\053\118\054\065\104\114","\053\084\053\118\054\070\053\118";"\098\084\106\066\102\065\071\057\054\065\053\111";"\048\076\101\118\048\122\061\061","\098\085\053\097\108\084\106\113\112\084\053\121\047\115\053\049\048\082\071\109\112\084\106\113\047\119\061\061","\053\100\112\099\117\069\097\079\068\082\103\079\048\065\083\101\102\113\088\083\054\082\051\066\047\100\071\109\108\100\088\056\108\077\104\101\048\116\115\061";"\054\100\104\066\108\100\043\055\120\113\106\057\054\065\072\099\112\065\043\118\117\082\053\118\112\105\106\113\102\065\101\076\054\082\053\074\048\122\061\061","\052\076\050\111\048\119\061\061";"\119\065\072\057\048\082\051\083\117\116\088\052\102\085\072\099\108\100\119\061","\105\082\071\056\117\079\061\061";"\052\084\106\083\048\084\101\118\048\109\104\099\112\084\081\101","\052\084\106\083\048\084\101\118\048\113\049\118\120\079\061\061","\052\084\106\083\048\084\101\118\048\109\071\109\102\077\104\099\112\084\081\101","\102\077\121\079\053\084\053\118\054\070\053\118\047\050\071\073\108\076\101\097\112\100\043\079\105\100\053\069","\098\070\083\056\112\109\104\101\068\100\119\061";"\098\076\050\051\048\076\101\101\117\084\119\061","\053\084\083\101\117\082\098\061","\104\084\053\076\102\065\053\074\112\122\061\061","\053\084\106\077\048\070\081\101\053\098\101\120\048\065\101\069\054\082\051\121";"\105\097\061\061","\119\070\106\118\048\076\101\077\112\065\072\083\112\084\101\056\117\101\071\083\112\076\101\118\048\097\061\061";"\104\082\051\083\102\076\081\101\048\122\061\061","\104\076\106\074\048\084\053\113\052\076\050\111\048\119\061\061";"\053\084\053\118\054\070\053\118\098\070\071\113\054\065\088\066\108\066\083\109\102\079\061\061";"\104\076\101\074\048\098\051\083\117\082\098\061","\104\084\101\057\102\070\106\113\048\122\061\061";"\105\082\051\070\054\065\104\101";"\098\052\053\086\053\077\104\081\108\077\072\081\082\122\061\061","\098\076\053\111\048\082\109\069\048\065\072\086\117\070\101\118\108\097\061\061";"\105\070\053\051\098\085\101\057\112\084\053\111","\105\070\053\051\098\070\053\066\112\084\101\118\048\085\043\061","\098\070\071\113\054\065\088\066\047\115\111\101\068\105\088\052\068\065\071\066\048\082\066\061","\098\085\053\069\112\084\101\066\117\084\098\061";"\104\082\051\066\048\065\047\079\054\070\053\051\047\100\104\056\047\100\053\057\048\105\088\057\102\085\072\099\108\100\119\061","\052\076\106\066\048\119\061\061";"\105\076\106\099\117\069\088\056\112\065\047\079\048\084\101\057\102\070\106\113\048\116\088\057\048\065\072\070\048\065\047\079\048\076\106\113\047\084\111\101\068\105\122\114\048\084\101\057\102\070\106\113\048\116\051\077\048\113\106\104\071\098\099\082\112\100\050\113\108\077\050\102\086\119\061\061","\053\084\053\118\054\070\053\118\047\115\111\101\068\105\088\052\068\065\071\066\048\082\066\061","\098\070\050\070\048\098\111\101\068\119\061\061";"\104\085\072\083\102\121\111\101\068\098\048\113\117\070\109\052\054\065\104\101","\105\070\053\051","\053\084\053\118\054\070\053\118\105\070\053\051","\098\070\053\113\112\076\053\113\047\115\071\056\117\077\104\113\117\070\081\057","\098\076\053\075\117\070\101\118\047\050\071\101\108\077\048\101\108\079\061\061","\119\070\050\074\117\084\072\083\102\070\074\061","\053\084\053\074\048\065\088\056\108\077\104\052\048\065\072\070\054\082\071\101","\105\076\106\069\105\082\119\061","\098\070\053\113\112\076\053\113\047\115\083\056\108\122\061\061";"\105\100\104\066\108\050\071\101\108\077\048\099\102\070\098\061";"\054\100\104\066\108\100\043\055\120\113\106\077\102\082\109\101\108\113\051\113\117\070\072\074\117\085\079\118\102\070\106\111\120\085\102\081\120\070\112\083\117\082\053\057\120\097\061\061";"\120\085\071\101\108\077\048\101\108\077\043\056\098\100\053\069\117\084\101\073\080\085\071\056\108\077\104\080\108\076\104\101\108\073\109\088\108\070\043\076\117\084\101\111\054\065\119\106\043\052\122\097";"\048\084\050\066\102\119\061\061","\108\084\081\083\068\082\101\118\048\097\061\061","\117\082\050\049\098\084\081\083\068\082\053\113\108\097\061\061";"\054\082\119\061","\054\082\051\057\048\065\072\066","\108\076\050\118\048\084\106\111";"\119\070\106\118\112\084\053\118\112\122\061\061";"\052\076\103\079\102\065\048\083\054\082\081\083\102\076\081\101\047\100\071\101\108\077\048\101\108\077\043\079\048\076\106\109\117\076\119\118";"\052\082\050\099\117\079\061\061","\104\053\071\119";"";"\053\084\053\083\117\119\061\061";"\053\084\053\083\117\098\071\056\117\084\106\113","\047\122\061\061";"\102\076\081\109\048\119\061\061";"\048\077\072\056\117\053\072\100\119\079\061\061";"\108\076\053\121","\068\082\053\074\117\084\106\085","\048\085\072\101\048\082\049\061";"\048\077\072\056\117\098\083\052\053\079\061\061","\119\070\083\083\108\076\050\073\112\084\053\113","\105\100\053\111\102\082\051\056\054\082\104\105\117\070\106\066\098\084\050\113\112\122\061\061";"\104\053\071\119\065\066\072\056\068\122\061\061";"\105\084\053\083\048\122\061\061","\104\053\071\119\065\066\051\083\117\082\098\061","\117\076\053\085","\119\076\106\049\105\084\050\118\048\084\081\101\119\082\104\056\108\076\051\111\048\082\051\066";"\119\082\081\085\102\065\101\057\052\070\051\098\117\085\122\061","\082\121\101\118\048\084\053\049","\119\082\104\056\108\076\051\101\048\119\061\061","\053\100\072\083\117\077\071\097\102\065\072\101\117\076\071\051"}local function En(Q)return en[Q+4674]end for Q,u in ipairs({{1,230},{1,101},{102,230}})do while u[1]<u[2]do en[u[1]],en[u[2]],u[1],u[2]=en[u[2]],en[u[1]],u[1]+1,u[2]-1 end end do local Q=string.char local u=math.floor local T=string.sub local S=string.len local a=en local N={["\054"]=26,h=17,I=35,["\043"]=12,L=38;V=10,["\047"]=8;b=20,d=7,r=40;o=45;O=32,["\053"]=21,e=37,x=11;A=23;g=60;G=13,j=61;B=52;s=4,a=48;p=29;f=24;l=28;["\057"]=51,Y=59,c=41,v=46,T=6;z=0;["\051"]=57;y=36;q=50;Z=14;W=31;N=63;["\055"]=58;i=18;w=16;P=15,u=27,n=43,D=30;["\050"]=5;k=62;K=42,["\056"]=47,["\048"]=25,E=34,C=3,H=9;R=22;F=54;Q=49,t=2;["\052"]=19,m=53;["\049"]=56;S=33;J=44;U=55,X=1,M=39}local y=type local x=table.insert local G=table.concat for M=1,#a,1 do local r=a[M]if y(r)=="\115\116\114\105\110\103"then local y=S(r)local D={}local q=1 local p=0 local A=0 while q<=y do local S=T(r,q,q)local a=N[S]if a then p=p+a*64^(3-A)A=A+1 if A==4 then A=0 local T=u(p/65536)local S=u((p%65536)/256)local a=p%256 x(D,Q(T,S,a))p=0 end elseif S=="\061"then x(D,Q(u(p/65536)))if q>=y or T(r,q+1,q+1)~="\061"then x(D,Q(u((p%65536)/256)))end break end q=q+1 end a[M]=G(D)end end end local function Q(Q)local u=game[En(-4673)]local T=cloneref or function(Q)return Q end return T(u(game,Q))end if syn then(Q(En(-4672))):SetCore(En(-4671),{[En(-4670)]=En(-4669),[En(-4668)]=En(-4667);[En(-4666)]=5})else(Q(En(-4672))):SetCore(En(-4671),{[En(-4670)]=En(-4669);[En(-4668)]=En(-4667),[En(-4666)]=5})end if game[En(-4665)]~=286090429 then game[En(-4664)][En(-4663)]:Kick(En(-4662))return end local u=game:GetService(En(-4664))local T=u[En(-4663)]local S=workspace[En(-4661)]local a=game:GetService(En(-4660))local N=game:GetService(En(-4659))local y=game:GetService(En(-4658))local x=getexecutorname()or identifyexecutor()if x then local Q={En(-4657);En(-4656);En(-4655);En(-4654);En(-4653),En(-4652);En(-4651)}local u=false for Q,T in ipairs(Q)do if string[En(-4650)](x,T)then u=true break end end if u then print(En(-4649))else game[En(-4664)][En(-4663)]:Kick(En(-4648))end end local G if identifyexecutor then G=identifyexecutor()elseif getexecutorname then G=getexecutorname()end local M=(loadstring(game:HttpGet(En(-4647))))()local r=M:CreateWindow({[En(-4646)]=En(-4645),[En(-4644)]=0;[En(-4643)]=En(-4642);[En(-4641)]=En(-4640),[En(-4639)]=En(-4638);[En(-4637)]=En(-4636),[En(-4635)]=En(-4634),[En(-4633)]={[En(-4632)]=true;[En(-4631)]=En(-4630);[En(-4629)]=En(-4630)},[En(-4628)]={[En(-4632)]=true,[En(-4627)]=En(-4626);[En(-4625)]=true},[En(-4624)]=true;[En(-4623)]={[En(-4670)]=En(-4622),[En(-4621)]=En(-4620),[En(-4619)]=En(-4618);[En(-4629)]=En(-4617),[En(-4616)]=false;[En(-4615)]=false,[En(-4614)]={En(-4613)}}})local D=r:CreateTab(En(-4612))D:CreateButton({[En(-4646)]=En(-4611);[En(-4610)]=function()local Q=game:GetService(En(-4609))local u=game:GetService(En(-4664))local T=u[En(-4663)]Q:TeleportToPlaceInstance(game[En(-4665)],game[En(-4608)],T)end})D:CreateButton({[En(-4646)]=En(-4607);[En(-4610)]=function()local Q=game:GetService(En(-4609))local u=game:GetService(En(-4606))local T=game:GetService(En(-4664))local S={}local a=game:HttpGet(En(-4605)..(game[En(-4665)]..En(-4604)))local N=u:JSONDecode(a)if N and N[En(-4603)]then for Q,u in pairs(N[En(-4603)])do if u[En(-4602)]<u[En(-4601)]and u[En(-4600)]~=game[En(-4608)]then table[En(-4599)](S,u[En(-4600)])end end end if#S>0 then Q:TeleportToPlaceInstance(game[En(-4665)],S[math[En(-4598)](1,#S)],T[En(-4663)])else M:Notify({[En(-4670)]=En(-4607),[En(-4597)]=En(-4596),[En(-4666)]=3})end end})local q=false local p=false local A=false local k=r:CreateTab(En(-4595),nil)local z=k:CreateSection(En(-4594))local function n(Q)local u=En(-4593)if Q[En(-4592)]then local T=Q[En(-4592)][En(-4646)]or En(-4593)local S=Q[En(-4592)][En(-4591)]and Q[En(-4592)][En(-4591)][En(-4646)]or En(-4593)u=(T..(En(-4590)..S)):lower()elseif Q[En(-4591)]then u=(Q[En(-4591)][En(-4646)]or En(-4593)):lower()end if u:find(En(-4589))then return Color3[En(-4588)](0,0,255)end if u:find(En(-4587))then return Color3[En(-4588)](255,0,0)end if u:find(En(-4586))then return Color3[En(-4588)](255,255,0)end if u:find(En(-4585))then return Color3[En(-4588)](0,255,0)end return Color3[En(-4588)](255,255,255)end local function B()local Q=(tick()%5)/5 return Color3[En(-4584)](Q,1,1)end local function c(Q)if Q[En(-4583)]then local u=Q[En(-4583)]:FindFirstChild(En(-4582))if u then local Q=u:FindFirstChild(En(-4581))if Q then Q:Destroy()end end local T=Q[En(-4583)]:FindFirstChild(En(-4580))if T then local Q=T:FindFirstChild(En(-4579))if Q then Q:Destroy()end end end end local function Y(Q)local u=Q[En(-4583)]if not u then return end local T=u:FindFirstChild(En(-4582))if not T then return end if not q and not A then local Q=T:FindFirstChild(En(-4581))if Q then Q:Destroy()end return end local S=T:FindFirstChild(En(-4581))if not S then S=Instance[En(-4578)](En(-4577))S[En(-4646)]=En(-4581)S[En(-4576)]=true S[En(-4575)]=10 S[En(-4574)]=T S[En(-4573)]=.5 S[En(-4572)]=T end S[En(-4571)]=Vector3[En(-4578)](4,7,2)if A then S[En(-4570)]=B()else S[En(-4570)]=n(Q)end end local function I(Q)local u=Q[En(-4583)]if not u then return end local T=u:FindFirstChild(En(-4580))if not T then return end if not p then local Q=T:FindFirstChild(En(-4579))if Q then Q:Destroy()end return end local S=T:FindFirstChild(En(-4579))if not S then S=Instance[En(-4578)](En(-4569))S[En(-4646)]=En(-4579)S[En(-4571)]=UDim2[En(-4578)](0,120,0,20)S[En(-4568)]=Vector3[En(-4578)](0,2.5,0)S[En(-4576)]=true S[En(-4574)]=T S[En(-4572)]=T local Q=Instance[En(-4578)](En(-4567))Q[En(-4646)]=En(-4668)Q[En(-4571)]=UDim2[En(-4578)](1,0,1,0)Q[En(-4566)]=1 Q[En(-4565)]=true Q[En(-4564)]=Enum[En(-4564)][En(-4563)]Q[En(-4562)]=Color3[En(-4588)](255,255,255)Q[En(-4561)]=0 Q[En(-4560)]=Color3[En(-4588)](0,0,0)Q[En(-4559)]=Enum[En(-4559)][En(-4558)]Q[En(-4557)]=Enum[En(-4557)][En(-4558)]Q[En(-4572)]=S end local a=S:FindFirstChild(En(-4668))if a then a[En(-4668)]=Q[En(-4646)]end end local function K(Q)Y(Q)I(Q)end local w=game:GetService(En(-4664))local P=game:GetService(En(-4660))local s=w[En(-4663)]local l=false local H={}local function d(Q)if H[Q]then return end local u=Drawing[En(-4578)](En(-4556))u[En(-4555)]=Color3[En(-4578)](1,1,1)u[En(-4554)]=1 u[En(-4573)]=1 u[En(-4553)]=true H[Q]=u end local function X(Q)if H[Q]then H[Q]:Remove()H[Q]=nil end end local function e()local Q=workspace[En(-4661)]local u=Q[En(-4552)]for T,S in pairs(H)do if T[En(-4583)]and T[En(-4583)]:FindFirstChild(En(-4582))then local a=T[En(-4583)][En(-4582)]local N,y=Q:WorldToViewportPoint(a[En(-4551)])if y then S[En(-4550)]=Vector2[En(-4578)](u[En(-4549)]/2,u[En(-4548)])S[En(-4547)]=Vector2[En(-4578)](N[En(-4549)],N[En(-4548)])S[En(-4553)]=true else S[En(-4553)]=false end else S[En(-4553)]=false end end end local E=k:CreateDropdown({[En(-4646)]=En(-4546);[En(-4545)]={En(-4544);En(-4543);En(-4542),En(-4541)};[En(-4540)]={};[En(-4539)]=true;[En(-4538)]=En(-4537),[En(-4610)]=function(Q)local u={}if type(Q)==En(-4536)then u=Q elseif type(Q)==En(-4535)then u={Q}end q=table[En(-4650)](u,En(-4544))~=nil p=table[En(-4650)](u,En(-4543))~=nil A=table[En(-4650)](u,En(-4542))~=nil l=table[En(-4650)](u,En(-4541))~=nil for Q,u in ipairs(w:GetPlayers())do if u~=s then if not q and(not p and(not A and not l))then c(u)X(u)else K(u)if l then d(u)else X(u)end end end end end})P[En(-4534)]:Connect(function()if l then e()end end)w[En(-4533)]:Connect(function(Q)Q[En(-4532)]:Connect(function()if l and Q~=s then d(Q)end end)if l and Q~=s then d(Q)end end)w[En(-4531)]:Connect(X)w[En(-4533)]:Connect(function(Q)Q[En(-4532)]:Connect(function()task[En(-4530)](1)K(Q)end)end)task[En(-4529)](function()while task[En(-4530)](2)do for Q,u in ipairs(w:GetPlayers())do if u~=s then if not q and(not p and not A)then c(u)else K(u)end end end end end)P[En(-4534)]:Connect(function()if A then for Q,u in ipairs(w:GetPlayers())do if u~=s and(u[En(-4583)]and u[En(-4583)]:FindFirstChild(En(-4582)))then local Q=u[En(-4583)][En(-4582)]local T=Q:FindFirstChild(En(-4581))if T then T[En(-4570)]=B()end end end end end)local m=k:CreateSection(En(-4528))local R=false local g=false local o=En(-4580)local f=.1 local i=true local C=150 local L=Drawing[En(-4578)](En(-4527))L[En(-4526)]=C L[En(-4525)]=false L[En(-4555)]=Color3[En(-4588)](255,255,255)L[En(-4553)]=false L[En(-4573)]=.7 L[En(-4524)]=64 L[En(-4554)]=1 k:CreateButton({[En(-4646)]=En(-4523);[En(-4610)]=function()R=not R L[En(-4553)]=R M:Notify({[En(-4670)]=En(-4522);[En(-4597)]=En(-4521)..(R and En(-4632)or En(-4520)),[En(-4666)]=3})end})k:CreateSlider({[En(-4646)]=En(-4519);[En(-4518)]={50;300},[En(-4517)]=10,[En(-4516)]=En(-4515),[En(-4514)]=C;[En(-4538)]=En(-4513),[En(-4610)]=function(Q)C=Q L[En(-4526)]=C end})k:CreateSlider({[En(-4646)]=En(-4512),[En(-4518)]={.05;.5};[En(-4517)]=.05,[En(-4516)]=En(-4511),[En(-4514)]=f;[En(-4538)]=En(-4510);[En(-4610)]=function(Q)f=Q end})local function W()local Q=C local u=nil for T,a in next,w:GetPlayers()do if a~=s and(a[En(-4583)]and a[En(-4583)]:FindFirstChild(En(-4582)))then local T=a[En(-4583)]:FindFirstChild(En(-4509))if T and T[En(-4508)]>0 then if not i or a[En(-4592)]~=s[En(-4592)]then local T=S:WorldToScreenPoint(a[En(-4583)][En(-4582)][En(-4551)])local y=N:GetMouseLocation()local x=(Vector2[En(-4578)](y[En(-4549)],y[En(-4548)])-Vector2[En(-4578)](T[En(-4549)],T[En(-4548)]))[En(-4507)]if x<Q then Q=x u=a end end end end end return u end N[En(-4506)]:Connect(function(Q)if Q[En(-4505)]==Enum[En(-4505)][En(-4504)]then g=true end end)N[En(-4503)]:Connect(function(Q)if Q[En(-4505)]==Enum[En(-4505)][En(-4504)]then g=false end end)P[En(-4534)]:Connect(function()if not R then return end L[En(-4551)]=N:GetMouseLocation()if g and R then local Q=W()if Q and(Q[En(-4583)]and Q[En(-4583)]:FindFirstChild(o))then local u=y:Create(S,TweenInfo[En(-4578)](f,Enum[En(-4502)][En(-4501)],Enum[En(-4500)][En(-4499)]),{[En(-4498)]=CFrame[En(-4578)](S[En(-4498)][En(-4551)],Q[En(-4583)][o][En(-4551)])})u:Play()end end end)local j=k:CreateSection(En(-4497))local J=16 k:CreateSlider({[En(-4646)]=En(-4496),[En(-4518)]={16,500};[En(-4517)]=1,[En(-4516)]=En(-4495),[En(-4514)]=50,[En(-4538)]=En(-4494);[En(-4610)]=function(Q)J=Q end})P[En(-4493)]:Connect(function()if s[En(-4583)]and(s[En(-4583)]:FindFirstChild(En(-4509))and s[En(-4583)]:FindFirstChild(En(-4582)))then local Q=s[En(-4583)][En(-4509)]local u=s[En(-4583)][En(-4582)]if Q[En(-4492)][En(-4507)]>0 then local T=Q[En(-4492)][En(-4491)]*J u[En(-4490)]=Vector3[En(-4578)](T[En(-4549)],u[En(-4490)][En(-4548)],T[En(-4489)])end end end)s[En(-4532)]:Connect(function(Q)Q:WaitForChild(En(-4582))end)local F=false local v=k:CreateToggle({[En(-4646)]=En(-4488);[En(-4514)]=false,[En(-4538)]=En(-4487),[En(-4610)]=function(Q)F=Q if s[En(-4583)]and s[En(-4583)]:FindFirstChild(En(-4509))then s[En(-4583)][En(-4509)][En(-4486)]=50 end end})s[En(-4532)]:Connect(function(Q)(Q:WaitForChild(En(-4509)))[En(-4486)]=50 end)N[En(-4485)]:Connect(function()if F and(s[En(-4583)]and s[En(-4583)]:FindFirstChild(En(-4509)))then s[En(-4583)][En(-4509)]:ChangeState(Enum[En(-4484)][En(-4483)])end end)local b=game:GetService(En(-4664))local t=game:GetService(En(-4659))local h=game:GetService(En(-4660))local O=b[En(-4663)]local V=O[En(-4583)]or O[En(-4532)]:Wait()local U=V:WaitForChild(En(-4582))local Z=r:CreateTab(En(-4482))local Qn=Z:CreateSection(En(-4481))local un=false local Tn=game:GetService(En(-4480))local Sn=Tn[En(-4479)]local an=Tn[En(-4478)]local Nn=Tn[En(-4477)]local function yn()if un then return end un=true Sn=Tn[En(-4479)]an=Tn[En(-4478)]Nn=Tn[En(-4477)]Tn[En(-4479)]=10 Tn[En(-4478)]=Color3[En(-4578)](1,1,1)Tn[En(-4477)]=Color3[En(-4578)](1,1,1)end local function xn()if not un then return end un=false Tn[En(-4479)]=Sn Tn[En(-4478)]=an Tn[En(-4477)]=Nn end local Gn=Z:CreateToggle({[En(-4646)]=En(-4476);[En(-4514)]=false,[En(-4538)]=En(-4475);[En(-4610)]=function(Q)if Q then yn()else xn()end end})local Mn=false local rn={}local function Dn()if Mn then return end Mn=true rn={}for Q,u in ipairs(workspace:GetDescendants())do if u:IsA(En(-4474))and u[En(-4573)]<1 then rn[u]=u[En(-4573)]u[En(-4573)]=.5 end end end local function qn()if not Mn then return end Mn=false for Q,u in pairs(rn)do if Q and Q:IsA(En(-4474))then Q[En(-4573)]=u end end rn={}end local pn=Z:CreateToggle({[En(-4646)]=En(-4473),[En(-4514)]=false;[En(-4538)]=En(-4472),[En(-4610)]=function(Q)if Q then Dn()else qn()end end})local An=false local kn=game[En(-4664)][En(-4663)]local zn=game:GetService(En(-4660))local nn local function Bn()if An then return end An=true nn=zn[En(-4471)]:Connect(function()local Q=kn[En(-4583)]if Q then for Q,u in ipairs(Q:GetDescendants())do if u:IsA(En(-4474))then u[En(-4470)]=false end end end end)end local function cn()if not An then return end An=false if nn then nn:Disconnect()nn=nil end local Q=kn[En(-4583)]if Q then for Q,u in ipairs(Q:GetDescendants())do if u:IsA(En(-4474))then u[En(-4470)]=true end end end end local Yn=Z:CreateToggle({[En(-4646)]=En(-4469),[En(-4514)]=false;[En(-4538)]=En(-4468);[En(-4610)]=function(Q)if Q then Bn()else cn()end end})local In=r:CreateTab(En(-4467),nil)local Kn={[En(-4636)]=En(-4636);[En(-4466)]=En(-4465),[En(-4464)]=En(-4464);[En(-4463)]=En(-4463);[En(-4462)]=En(-4461);[En(-4460)]=En(-4460),[En(-4459)]=En(-4459);[En(-4458)]=En(-4458);[En(-4457)]=En(-4457)}local wn=En(-4636)local Pn=In:CreateDropdown({[En(-4646)]=En(-4456);[En(-4545)]={En(-4636);En(-4466),En(-4464),En(-4463),En(-4462);En(-4460);En(-4459),En(-4458);En(-4457)},[En(-4540)]=wn,[En(-4538)]=En(-4455);[En(-4610)]=function(Q)local u=type(Q)==En(-4536)and Q[1]or Q print(En(-4454),u)local T=Kn[u]or u print(En(-4453),T)if type(r[En(-4452)])==En(-4451)then r[En(-4452)](T)elseif type(r[En(-4452)])==En(-4451)then r:ModifyTheme(T)else warn(En(-4450))end end})local sn=r:CreateTab(En(-4449),null)local ln=sn:CreateSection(En(-4448))local Hn=sn:CreateSection(En(-4447))local dn=sn:CreateSection(En(-4446))local Xn=sn:CreateButton({[En(-4646)]=En(-4445);[En(-4610)]=function()setclipboard(En(-4444))end})end)(...)
